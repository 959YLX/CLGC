// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs_common.proto

#include "cs_common.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
namespace csproto {
class ClientRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientRequest> _instance;
} _ClientRequest_default_instance_;
class ServerResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServerResponse> _instance;
  const PROTOBUF_NAMESPACE_ID::Any* success_data_;
  const PROTOBUF_NAMESPACE_ID::Any* error_data_;
} _ServerResponse_default_instance_;
}  // namespace csproto
static void InitDefaultsscc_info_ClientRequest_cs_5fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::csproto::_ClientRequest_default_instance_;
    new (ptr) ::csproto::ClientRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::csproto::ClientRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ClientRequest_cs_5fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ClientRequest_cs_5fcommon_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_ServerResponse_cs_5fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::csproto::_ServerResponse_default_instance_;
    new (ptr) ::csproto::ServerResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::csproto::ServerResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ServerResponse_cs_5fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ServerResponse_cs_5fcommon_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_cs_5fcommon_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_cs_5fcommon_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_cs_5fcommon_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_cs_5fcommon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::csproto::ClientRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::csproto::ClientRequest, client_version_),
  PROTOBUF_FIELD_OFFSET(::csproto::ClientRequest, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::csproto::ServerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::csproto::ServerResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::csproto::ServerResponse, code_),
  PROTOBUF_FIELD_OFFSET(::csproto::ServerResponse, msg_),
  offsetof(::csproto::ServerResponseDefaultTypeInternal, success_data_),
  offsetof(::csproto::ServerResponseDefaultTypeInternal, error_data_),
  PROTOBUF_FIELD_OFFSET(::csproto::ServerResponse, data_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::csproto::ClientRequest)},
  { 7, -1, sizeof(::csproto::ServerResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::csproto::_ClientRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::csproto::_ServerResponse_default_instance_),
};

const char descriptor_table_protodef_cs_5fcommon_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017cs_common.proto\022\007csproto\032\031google/proto"
  "buf/any.proto\"J\n\rClientRequest\022\026\n\016client"
  "_version\030\001 \001(\005\022!\n\003msg\030d \001(\0132\024.google.pro"
  "tobuf.Any\"\215\001\n\016ServerResponse\022\014\n\004code\030\001 \001"
  "(\005\022\013\n\003msg\030\002 \001(\t\022,\n\014success_data\030d \001(\0132\024."
  "google.protobuf.AnyH\000\022*\n\nerror_data\030e \001("
  "\0132\024.google.protobuf.AnyH\000B\006\n\004datab\006proto"
  "3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_cs_5fcommon_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_cs_5fcommon_2eproto_sccs[2] = {
  &scc_info_ClientRequest_cs_5fcommon_2eproto.base,
  &scc_info_ServerResponse_cs_5fcommon_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_cs_5fcommon_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cs_5fcommon_2eproto = {
  false, false, descriptor_table_protodef_cs_5fcommon_2eproto, "cs_common.proto", 281,
  &descriptor_table_cs_5fcommon_2eproto_once, descriptor_table_cs_5fcommon_2eproto_sccs, descriptor_table_cs_5fcommon_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_cs_5fcommon_2eproto::offsets,
  file_level_metadata_cs_5fcommon_2eproto, 2, file_level_enum_descriptors_cs_5fcommon_2eproto, file_level_service_descriptors_cs_5fcommon_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_cs_5fcommon_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_cs_5fcommon_2eproto)), true);
namespace csproto {

// ===================================================================

void ClientRequest::InitAsDefaultInstance() {
  ::csproto::_ClientRequest_default_instance_._instance.get_mutable()->msg_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class ClientRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& msg(const ClientRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
ClientRequest::_Internal::msg(const ClientRequest* msg) {
  return *msg->msg_;
}
void ClientRequest::clear_msg() {
  if (GetArena() == nullptr && msg_ != nullptr) {
    delete msg_;
  }
  msg_ = nullptr;
}
ClientRequest::ClientRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:csproto.ClientRequest)
}
ClientRequest::ClientRequest(const ClientRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_msg()) {
    msg_ = new PROTOBUF_NAMESPACE_ID::Any(*from.msg_);
  } else {
    msg_ = nullptr;
  }
  client_version_ = from.client_version_;
  // @@protoc_insertion_point(copy_constructor:csproto.ClientRequest)
}

void ClientRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientRequest_cs_5fcommon_2eproto.base);
  ::memset(&msg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_version_) -
      reinterpret_cast<char*>(&msg_)) + sizeof(client_version_));
}

ClientRequest::~ClientRequest() {
  // @@protoc_insertion_point(destructor:csproto.ClientRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClientRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete msg_;
}

void ClientRequest::ArenaDtor(void* object) {
  ClientRequest* _this = reinterpret_cast< ClientRequest* >(object);
  (void)_this;
}
void ClientRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClientRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientRequest& ClientRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientRequest_cs_5fcommon_2eproto.base);
  return *internal_default_instance();
}


void ClientRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csproto.ClientRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && msg_ != nullptr) {
    delete msg_;
  }
  msg_ = nullptr;
  client_version_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 client_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          client_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any msg = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_msg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csproto.ClientRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 client_version = 1;
  if (this->client_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_client_version(), target);
  }

  // .google.protobuf.Any msg = 100;
  if (this->has_msg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        100, _Internal::msg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csproto.ClientRequest)
  return target;
}

size_t ClientRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csproto.ClientRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any msg = 100;
  if (this->has_msg()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *msg_);
  }

  // int32 client_version = 1;
  if (this->client_version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_client_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:csproto.ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:csproto.ClientRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:csproto.ClientRequest)
    MergeFrom(*source);
  }
}

void ClientRequest::MergeFrom(const ClientRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:csproto.ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg()) {
    _internal_mutable_msg()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_msg());
  }
  if (from.client_version() != 0) {
    _internal_set_client_version(from._internal_client_version());
  }
}

void ClientRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:csproto.ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientRequest::CopyFrom(const ClientRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csproto.ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientRequest::IsInitialized() const {
  return true;
}

void ClientRequest::InternalSwap(ClientRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClientRequest, client_version_)
      + sizeof(ClientRequest::client_version_)
      - PROTOBUF_FIELD_OFFSET(ClientRequest, msg_)>(
          reinterpret_cast<char*>(&msg_),
          reinterpret_cast<char*>(&other->msg_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServerResponse::InitAsDefaultInstance() {
  ::csproto::_ServerResponse_default_instance_.success_data_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
  ::csproto::_ServerResponse_default_instance_.error_data_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class ServerResponse::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& success_data(const ServerResponse* msg);
  static const PROTOBUF_NAMESPACE_ID::Any& error_data(const ServerResponse* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
ServerResponse::_Internal::success_data(const ServerResponse* msg) {
  return *msg->data_.success_data_;
}
const PROTOBUF_NAMESPACE_ID::Any&
ServerResponse::_Internal::error_data(const ServerResponse* msg) {
  return *msg->data_.error_data_;
}
void ServerResponse::set_allocated_success_data(PROTOBUF_NAMESPACE_ID::Any* success_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_data();
  if (success_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(success_data)->GetArena();
    if (message_arena != submessage_arena) {
      success_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, success_data, submessage_arena);
    }
    set_has_success_data();
    data_.success_data_ = success_data;
  }
  // @@protoc_insertion_point(field_set_allocated:csproto.ServerResponse.success_data)
}
void ServerResponse::clear_success_data() {
  if (_internal_has_success_data()) {
    if (GetArena() == nullptr) {
      delete data_.success_data_;
    }
    clear_has_data();
  }
}
void ServerResponse::set_allocated_error_data(PROTOBUF_NAMESPACE_ID::Any* error_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_data();
  if (error_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(error_data)->GetArena();
    if (message_arena != submessage_arena) {
      error_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error_data, submessage_arena);
    }
    set_has_error_data();
    data_.error_data_ = error_data;
  }
  // @@protoc_insertion_point(field_set_allocated:csproto.ServerResponse.error_data)
}
void ServerResponse::clear_error_data() {
  if (_internal_has_error_data()) {
    if (GetArena() == nullptr) {
      delete data_.error_data_;
    }
    clear_has_data();
  }
}
ServerResponse::ServerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:csproto.ServerResponse)
}
ServerResponse::ServerResponse(const ServerResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  clear_has_data();
  switch (from.data_case()) {
    case kSuccessData: {
      _internal_mutable_success_data()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_success_data());
      break;
    }
    case kErrorData: {
      _internal_mutable_error_data()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_error_data());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:csproto.ServerResponse)
}

void ServerResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ServerResponse_cs_5fcommon_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  clear_has_data();
}

ServerResponse::~ServerResponse() {
  // @@protoc_insertion_point(destructor:csproto.ServerResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServerResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_data()) {
    clear_data();
  }
}

void ServerResponse::ArenaDtor(void* object) {
  ServerResponse* _this = reinterpret_cast< ServerResponse* >(object);
  (void)_this;
}
void ServerResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServerResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerResponse& ServerResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServerResponse_cs_5fcommon_2eproto.base);
  return *internal_default_instance();
}


void ServerResponse::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:csproto.ServerResponse)
  switch (data_case()) {
    case kSuccessData: {
      if (GetArena() == nullptr) {
        delete data_.success_data_;
      }
      break;
    }
    case kErrorData: {
      if (GetArena() == nullptr) {
        delete data_.error_data_;
      }
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void ServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:csproto.ServerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  clear_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServerResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csproto.ServerResponse.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any success_data = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_success_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any error_data = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_error_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServerResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csproto.ServerResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csproto.ServerResponse.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // .google.protobuf.Any success_data = 100;
  if (_internal_has_success_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        100, _Internal::success_data(this), target, stream);
  }

  // .google.protobuf.Any error_data = 101;
  if (_internal_has_error_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        101, _Internal::error_data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csproto.ServerResponse)
  return target;
}

size_t ServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csproto.ServerResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  switch (data_case()) {
    // .google.protobuf.Any success_data = 100;
    case kSuccessData: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.success_data_);
      break;
    }
    // .google.protobuf.Any error_data = 101;
    case kErrorData: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.error_data_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:csproto.ServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServerResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:csproto.ServerResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:csproto.ServerResponse)
    MergeFrom(*source);
  }
}

void ServerResponse::MergeFrom(const ServerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:csproto.ServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  switch (from.data_case()) {
    case kSuccessData: {
      _internal_mutable_success_data()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_success_data());
      break;
    }
    case kErrorData: {
      _internal_mutable_error_data()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_error_data());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void ServerResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:csproto.ServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerResponse::CopyFrom(const ServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csproto.ServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerResponse::IsInitialized() const {
  return true;
}

void ServerResponse::InternalSwap(ServerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServerResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace csproto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::csproto::ClientRequest* Arena::CreateMaybeMessage< ::csproto::ClientRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csproto::ClientRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::csproto::ServerResponse* Arena::CreateMaybeMessage< ::csproto::ServerResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csproto::ServerResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
